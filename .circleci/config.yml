version: 2

references:

  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  gems_key: &gems_key
    key: gems-{{ checksum "Gemfile.lock" }}

  restore_cache: &restore_cache
      restore_cache:
        <<: *cache_key
  save_cache: &save_cache
      save_cache:
        <<: *cache_key
        paths:
          - ~/.gradle
          - ~/.m2

  restore_gems_cache: &restore_gems_cache
    restore_cache:
      <<: *gems_key

  save_gems_cache: &save_gems_cache
    save_cache:
      <<: *gems_key
      paths:
        - vendor/bundle



  workspace: &workspace
    ~/workspace
  attach_debug_workspace: &attach_debug_workspace
    attach_workspace:
      at: *workspace
  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace
  persist_debug_workspace: &persist_debug_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/outputs/androidTest-results
        - app/build/outputs/apk
        - app/build/outputs/code-coverage
        - app/build/test-results
  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build/outputs/apk
  attach_firebase_workspace: &attach_firebase_workspace
    attach_workspace:
      at: *workspace
  persist_firebase_workspace: &persist_firebase_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - firebase

## Docker image configurations

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28
    environment:
        TERM: dumb
        GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

  swap_tt_key: &swap_tt_key
    run:
      name: Swap TomTom Key
      command: sed -i "s/_______YOUR_KEY_GOES_HERE_______/$SECRET/g" app/src/main/AndroidManifest.xml
  decrypt_keystore: &decrypt_keystore
      run:
        name: Decrypt keystore
        command: openssl aes-256-cbc -d -in saramak.jks.enc -out saramak.jks -k $SECRET -md md5
  decrypt_play: &decrypt_play
        run:
          name: decrypt play
          command: openssl aes-256-cbc -d -in fastlane/play.json.enc -out fastlane/play.json -k $SECRET -md md5

  ruby_dependencies: &ruby_dependencies
      run:
        name: Download Ruby Dependencies
        command: bundle update || bundle install --path vendor/bundle

jobs:

  ## Build debug APK and instrumented test APK

  build_release:
      <<: *android_config
      steps:
        - checkout
        - *restore_cache
        - *swap_tt_key
        - *decrypt_keystore
        - run: yes | sdkmanager --licenses
        - run: yes | sdkmanager --update || exit 0
        - run:
            name: Download dependencies
            command: ./gradlew androidDependencies
        - *save_cache
        - run:
            name: Run Tests
            command: ./gradlew lint assembleAndroidTest build
        - *save_cache
        - *persist_debug_workspace
        - store_artifacts:
            path: app/build/reports
            destination: reports
        - store_artifacts:
            path: app/build/outputs/apk/
            destination: apk
        - store_test_results:
            path: app/build/test-results

  test_instrumented:
      <<: *android_config
      steps:
        - checkout
        - *restore_gems_cache
        - *restore_cache
        - *attach_debug_workspace
        - *swap_tt_key
        - *decrypt_keystore
        - *ruby_dependencies
        - *save_gems_cache
        - run:
            name: Create directory to store test results
            command: mkdir firebase
        - run:
            name: Uninstall crcmod
            command: echo "y" | sudo pip uninstall crcmod
        - run:
            name: Install crcmod
            command: sudo pip install -U crcmod
        - run:
            name: Run instrumentation_tests_testlab
            command: bundle exec fastlane instrumentation_tests_testlab #command: bundle exec fastlane android test
        - store_artifacts:
            path: app/build/reports/
            destination: /reports/
        - store_test_results:
            path: app/build/test-results/
            destination: /test-results/
        - store_artifacts:
            path: firebase/
            destination: /firebase/

  deploy_beta:
      <<: *android_config
      steps:
      - checkout
      - *restore_gems_cache
      - *restore_cache
      - *swap_tt_key
      - *decrypt_keystore
      - *ruby_dependencies
      - *save_gems_cache
      - *decrypt_play
      - run:
          name: Deploy beta
          command: bundle exec fastlane android beta


workflows:
  version: 2
  all:
    jobs:
      - build_release
      - test_instrumented:
          requires:
            - build_release
      - deploy_beta:
          requires:
            - build_release
            - test_instrumented


